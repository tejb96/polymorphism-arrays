@startuml

class Shape2D {
    - width: double
    - height: double
    + Shape2D()
    + Shape2D(w: double, h: double)
    + getWidth(): double
    + setWidth(w: double): void
    + getHeight(): double
    + setHeight(h: double): void
    + toString(): String
    + abstract getCircumference(): double
    + abstract getArea(): double
}

interface IShapePoints {
    + getReferencePoint(): Point2D
    + setReferencePoint(p: Point2D): void
    + getAllShapePoints(): Point2D[]
}

class Rectangle {
    - referencePoint: Point2D
    + Rectangle()
    + Rectangle(w: double, h: double)
    + getCircumference(): double
    + getArea(): double
    + getReferencePoint(): Point2D
    + setReferencePoint(p: Point2D): void
    + getAllShapePoints(): Point2D[]
}

class Square {
    + Square()
    + Square(l: double)
    + getCircumference(): double
    + getArea(): double
    + setWidth(w: double): void
    + setHeight(h: double): void
}

class RightTriangle {
    + RightTriangle()
    + RightTriangle(w: double, h: double)
    + getCircumference(): double
    + getArea(): double
}

Rectangle --> Shape2D : uses
Rectangle --> IShapePoints : uses
Square --> Shape2D : uses
RightTriangle --> Shape2D : uses

@enduml
